{"version":3,"sources":["Drawing.js"],"names":[],"mappingsfile":"Drawing.js","sourcesContent":["/************************************************ \r\nDrawing Library\r\nCopyright (c) 2014-2015 Dongxu Ren  http://www.rendxx.com/\r\n\r\nLicense: MIT (http://www.opensource.org/licenses/mit-license.php)\r\nVersion: 0.3.0\r\nUpdate: 2016-04-22\r\n\r\nDescription:\r\n    Draw shape in selected HTML container\r\n    \r\nCompatibility:\r\n    Chrome; Fire Fox; Safari; Edge; IE 9-11;\r\n \r\nDependency:\r\n    jQuery\r\n    Transform2D\r\n\r\nAPI-Drawing Library:\r\n    $$.drawing.create(shapeType, opts)\r\n        - (object) Create a specific shape object with given options\r\n    \r\nAPI-Base:\r\n    [Shape].show()/hide()\r\n        - show/hide shpae element\r\n    \r\n    [Shape].move(left, top)\r\n        - pan left/top from current position\r\n    \r\n    [Shape].moveTo(left, top)\r\n        - move to given position\r\n    \r\n    [Shape].rotate(deg)\r\n        - rotate given deg clockwise\r\n    \r\n    [Shape].rotateTo(deg)\r\n        - rotate to given deg clockwise from origin\r\n    \r\n    [Shape].scaleTo(ratio)\r\n        - scale to given ratio\r\n    \r\n    [Shape].setOpts(opts)\r\n        - reset options and re-render the shape\r\n\r\n    [Shape].destroy()\r\n        - destroy the object\r\n    \r\nAPI-Line:\r\n    [Shape].lineTo(left, top)\r\n        - move the end of the line to specific position\r\n\r\n    [Shape].scaleTo()\r\n        - scale is disabled in line    \r\n\r\n    [Shape].ptrStart\r\n        - start pointer of the line\r\n\r\n    [Shape].ptrEnd\r\n        - end pointer of the line\r\n\r\n    [Shape].options\r\n        - options of the line\r\n\r\n************************************************/\r\n\r\n(function () {\r\n    \"use strict\";\r\n    // HTML library\r\n    var _HTML = {};\r\n    _HTML[\"Base\"] = '';\r\n    _HTML[\"Line\"] = '<div class=\"drawing-wrap\"><div class=\"drawing-line\"><div class=\"drawing-line-start\"></div><div class=\"drawing-line-body\"></div><div class=\"drawing-line-end\"></div></div></div>';\r\n    // Shape library\r\n    var _Shape = {};\r\n    _Shape[\"Base\"] = function () {\r\n        this.ele;\r\n        this.inner;\r\n        this.deg;\r\n\r\n        this.move = function (left, top) {\r\n            if (this.ele == null) return;\r\n            var cssList = {\r\n                \"left\": (parseInt(this.inner.css(\"left\")) + (left ? left : 0)) + \"px\",\r\n                \"top\": (parseInt(this.inner.css(\"top\")) + (top ? top : 0)) + \"px\"\r\n            };\r\n            this.ele.css(cssList);\r\n        };\r\n\r\n        this.moveTo = function (left, top) {\r\n            if (this.ele == null) return;\r\n            var cssList = {};\r\n            if (left !== null && left !== undefined) cssList[\"left\"] = left + \"px\";\r\n            if (top !== null && top !== undefined) cssList[\"top\"] = top + \"px\";\r\n            this.ele.css(cssList);\r\n        };\r\n\r\n        this.rotate = function (deg) {\r\n            if (this.ele == null) return;\r\n            var r = this.inner.rotation();\r\n            this.inner.transform2D({\r\n                rotate: r + deg\r\n            });\r\n        };\r\n\r\n        this.rotateTo = function (deg) {\r\n            if (this.ele == null) return;\r\n            this.inner.transform2D({\r\n                rotate: deg\r\n            });\r\n        };\r\n\r\n        this.scaleTo = function (ratio) {\r\n            if (this.ele == null) return;\r\n            this.inner.transform2D({\r\n                scaleX: ratio,\r\n                scaleY: ratio\r\n            });\r\n        };\r\n\r\n        // Element control\r\n        this.show = function () {\r\n            if (this.ele == null) return;\r\n            this.ele.show();\r\n        };\r\n\r\n        this.hide = function () {\r\n            if (this.ele == null) return;\r\n            this.ele.hide();\r\n        };\r\n\r\n        this.destroy = function () {\r\n            if (this.ele == null) return;\r\n            this.ele.remove();\r\n        };\r\n\r\n        this.setOpts = function (opts) {\r\n        };\r\n    };\r\n\r\n    _Shape[\"Line\"] = function (opts_in) {\r\n        var that = this;\r\n        var _base = this;\r\n        var _buffer_h = 0;      // buffer of line length, in order to fix old ie issue\r\n        var _t = 0;             // top difference\r\n        var _l = 0;             // left difference\r\n        var bodyLengthAdjust = 0;       // adjust length of body\r\n        var bodyOffset = 0;             // offset the body from start to end\r\n\r\n        var _html = {\r\n            \"body\": null,\r\n            \"start\": null,\r\n            \"end\": null\r\n        };\r\n        var endPoint = {\r\n            \"left\": 0,\r\n            \"top\": 0\r\n        };\r\n        \r\n        this.ptrStart = null;\r\n        this.ptrEnd = null;\r\n        this.options = {\r\n            \"container\": $(\"body\"),\r\n            \"z-index\": 1\r\n        };\r\n\r\n        this.lineTo = function (left, top) {\r\n            if (left !== null && left !== undefined) endPoint[\"left\"] = left;\r\n            if (top !== null && top !== undefined) endPoint[\"top\"] = top;\r\n\r\n            // set line \r\n            var startPoint = {\r\n                left:  parseInt(that.ele.css(\"left\")),\r\n                top:  parseInt(that.ele.css(\"top\"))\r\n            };\r\n\r\n            _l = endPoint.left - startPoint.left;\r\n            _t = endPoint.top - startPoint.top;\r\n            var deg = -Math.atan2(_l, _t) * 180 / Math.PI;\r\n            _buffer_h = Math.sqrt(_l * _l + _t * _t);\r\n            that.ele.css(\"overflow\",\"hidden\");\r\n            that.inner.height(_buffer_h);\r\n            _html[\"body\"].height(_buffer_h + bodyLengthAdjust);\r\n\r\n            this.rotateTo(deg);\r\n            that.ele.css(\"overflow\", \"visible\");\r\n        };\r\n\r\n        this.rotate = function (deg) {\r\n            if (this.ele == null) return;\r\n            var r = that.inner.rotation();\r\n            that.inner.transform2D({\r\n                rotate: r + deg,\r\n                translateX: -(_buffer_h / 2) * Math.sin(deg / 180 * Math.PI),\r\n                translateY: (_buffer_h / 2) * Math.cos(deg / 180 * Math.PI) - _buffer_h / 2\r\n            });\r\n        };\r\n\r\n        this.rotateTo = function (deg) {\r\n            if (this.ele == null) return;\r\n            that.inner.transform2D({\r\n                rotate: deg,\r\n                translateX: -(_buffer_h / 2) * Math.sin(deg / 180 * Math.PI),\r\n                translateY: (_buffer_h / 2) * Math.cos(deg / 180 * Math.PI) - _buffer_h / 2\r\n            });\r\n        };\r\n\r\n        this.scaleTo = function (rate) {\r\n            return;\r\n        };\r\n\r\n        this.setOpts = function (opts) {\r\n            _setOpts(opts);\r\n            _render();\r\n        };\r\n\r\n        var _setOpts = function (opts) {\r\n            if (opts == null) return;\r\n            if (opts[\"container\"]) that.options[\"container\"] = opts[\"container\"];\r\n            if (opts[\"z-index\"]) that.options[\"z-index\"] = opts[\"z-index\"];\r\n            if (opts[\"adjust\"]) that.options[\"adjust\"] = opts[\"adjust\"];\r\n            if (opts[\"offset\"]) that.options[\"offset\"] = opts[\"offset\"];\r\n            if (opts[\"css\"]) that.options[\"css\"] = opts[\"css\"];\r\n        };\r\n\r\n        var _render = function () {\r\n            var opts = that.options;\r\n\r\n            // overall css\r\n            that.ele.css(\"z-index\", opts[\"z-index\"]);\r\n\r\n            // body css\r\n            var cssListBody = {};\r\n            if (opts.hasOwnProperty(\"css\") && opts.css.hasOwnProperty(\"body\")) {\r\n                for (var i in opts.css.body) {\r\n                    cssListBody[i] = opts.css.body[i];\r\n                }\r\n            }\r\n            _html[\"body\"].css(cssListBody);\r\n            var leftOffset = parseInt(_html[\"body\"].css('padding-left')) + parseInt(_html[\"body\"].css('border-left-width')) + _html[\"body\"].width() / 2;\r\n            _html[\"body\"].css('margin-left', -leftOffset + \"px\");\r\n            \r\n            // start pointer css\r\n            var cssListStart = {};\r\n            if (opts.hasOwnProperty(\"css\") && opts.css.hasOwnProperty(\"start\")) {\r\n                for (var i in opts.css.start) {\r\n                    cssListStart[i] = opts.css.start[i];\r\n                }\r\n            }\r\n            _html[\"start\"].css(cssListStart);\r\n            var leftOffset = parseInt(_html[\"start\"].css('padding-left')) + parseInt(_html[\"start\"].css('border-left-width')) + _html[\"start\"].width() / 2;\r\n            _html[\"start\"].css('left', -leftOffset + \"px\");\r\n\r\n            // end pointer css\r\n            var cssListEnd = {};\r\n            if (opts.hasOwnProperty(\"css\") && opts.css.hasOwnProperty(\"end\")) {\r\n                for (var i in opts.css.end) {\r\n                    cssListEnd[i] = opts.css.end[i];\r\n                }\r\n            }\r\n            _html[\"end\"].css(cssListEnd);\r\n            var leftOffset = parseInt(_html[\"end\"].css('padding-left')) + parseInt(_html[\"end\"].css('border-left-width')) + _html[\"end\"].width() / 2;\r\n            _html[\"end\"].css('margin-left', -leftOffset + \"px\");\r\n\r\n\r\n            var _topOffset = -(parseInt(_html[\"start\"].css('padding-top')) + parseInt(_html[\"start\"].css('border-top-width')) + _html[\"start\"].height() / 2);\r\n            _html[\"start\"].css('top', _topOffset + \"px\");\r\n\r\n            var _bottomOffset = -(parseInt(_html[\"end\"].css('padding-bottom')) + parseInt(_html[\"end\"].css('border-bottom-width')) + _html[\"end\"].height() / 2);\r\n            _html[\"end\"].css('bottom', _bottomOffset + \"px\");\r\n            \r\n            if (opts.hasOwnProperty(\"adjust\") && opts.adjust !== null) bodyLengthAdjust = opts.adjust;\r\n            if (opts.hasOwnProperty(\"offset\") && opts.adjust !== null) bodyOffset = opts.offset;\r\n            _html[\"body\"].css('margin-top', bodyOffset + \"px\");\r\n        };\r\n\r\n        var _buildEle = function () {\r\n            that.ele = $(_HTML.Line);\r\n            that.ele.appendTo(that.options.container);\r\n            that.inner = that.ele.children(\".drawing-line\");\r\n            _html[\"body\"] = that.inner.children(\".drawing-line-body\");\r\n            _html[\"start\"] = that.inner.children(\".drawing-line-start\");\r\n            _html[\"end\"] = that.inner.children(\".drawing-line-end\");\r\n            that.ptrStart = _html[\"start\"];\r\n            that.ptrEnd = _html[\"end\"];\r\n\r\n            that.ele.css({\r\n                \"position\": \"absolute\",\r\n                \"margin\": \"0px\",\r\n                \"padding\": \"0px\",\r\n                \"border\": \"0px\",\r\n                \"top\": \"0px\",\r\n                \"left\": \"0px\",\r\n                \"width\": \"1px\",\r\n                \"height\": \"1px\",\r\n                \"overflow\": \"visible\"\r\n            });\r\n            that.inner.css({\r\n                \"position\": \"absolute\",\r\n                \"margin\": \"0px\",\r\n                \"padding\": \"0px\",\r\n                \"border\": \"0px\",\r\n                \"top\": \"0px\",\r\n                \"left\": \"0px\",\r\n                \"width\":\"0px\",\r\n                \"overflow\": \"visible\"\r\n            });\r\n            _html[\"body\"].css({\r\n                \"position\": \"absolute\",\r\n                \"top\": \"0px\",\r\n                \"left\": \"0px\",\r\n                \"z-index\": \"1\",\r\n                \"width\": \"0px\",\r\n                \"height\": \"100%\",\r\n                \"margin\": \"0px\",\r\n                \"background-position\":\"center center\"\r\n            });\r\n            _html[\"start\"].css({\r\n                \"position\": \"absolute\",\r\n                \"top\": \"0px\",\r\n                \"left\": \"0px\",\r\n                \"z-index\": \"3\",\r\n                \"width\": \"0px\",\r\n                \"height\": \"0px\",\r\n                \"margin\": \"0px\"\r\n            });\r\n            _html[\"end\"].css({\r\n                \"position\": \"absolute\",\r\n                \"bottom\": \"0px\",\r\n                \"left\": \"0px\",\r\n                \"z-index\": \"2\",\r\n                \"width\": \"0px\",\r\n                \"height\": \"0px\",\r\n                \"margin\": \"0px\"\r\n            });\r\n\r\n            _render();\r\n        };\r\n\r\n        var _init = function (opts) {\r\n            _base = that.constructor.prototype = new _Shape.Base();\r\n            _setOpts(opts);\r\n            _buildEle();\r\n            _render();\r\n        }(opts_in);\r\n    };\r\n\r\n    // Drawing init\r\n    var _initDrawing = function () {\r\n        this.create = function (shapeType, opts) {\r\n            if (!(shapeType in _Shape) || shapeType == \"Base\") return null;\r\n            _Shape[shapeType].prototype = new _Shape.Base();\r\n            _Shape[shapeType].base = _Shape[shapeType].prototype;\r\n            return new _Shape[shapeType](opts);\r\n        };\r\n        var _init = function () {\r\n        }();\r\n    };\r\n\r\n    window.$$ = window.$$ || {};\r\n    window.$$.drawing = new _initDrawing();\r\n})();"],"sourceRoot":"/source/"}