{"version":3,"sources":["Func.js","Drawing.Basic.js","Drawing.Free.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Drawing.js","sourcesContent":["window.$$ = window.$$ || {};\r\nwindow.$$.func = window.$$.func || {};\r\n\r\n(function (FUNC) {\r\n    \"use strict\";\r\n    FUNC.offsetScreen = function (node) {\r\n        if (node === document.body) return {top:0, left:0};\r\n        var top = node.offsetTop,\r\n            left = node.offsetLeft;\r\n        node = node.parentNode;\r\n        while (node !== document.body) {\r\n            top -= node.scrollTop;\r\n            left -= node.scrollLeft;\r\n            node = node.parentNode;\r\n        }\r\n        return { top: top, left: left };\r\n    };\r\n    \r\n    FUNC.getMousePos = function (e, parent) {\r\n        var pos;\r\n        if (e.pageX == undefined) {\r\n            pos = [e.originalEvent.touches[0].pageX, e.originalEvent.touches[0].pageY];\r\n        } else {\r\n            pos = [e.pageX, e.pageY];\r\n        }\r\n        if (parent != undefined) {\r\n            var offset = FUNC.offsetScreen(parent);\r\n            pos[0] -= offset.left;\r\n            pos[1] -= offset.top;\r\n        }\r\n        return pos;\r\n    };\r\n\r\n})(window.$$.func);\r\n","window.$$ = window.$$ || {};\r\nwindow.$$.draw = window.$$.draw || {};\r\n\r\n(function (DRAW) {\r\n\t\"use strict\";\r\n\r\n\tvar Basic = function (container, para) {\r\n\t\tthis.container = container;\r\n\t\tthis.para = para;\r\n\t\tthis._canvas = document.createElement('canvas');\r\n\t\tthis._ctx = this._canvas.getContext('2d');\r\n\t\tthis.container.appendChild(this._canvas);\r\n\t\tthis.resize();\r\n\t};\r\n\tBasic.prototype = Object.create(null);\r\n\tBasic.prototype.constructor = Basic;\r\n\r\n\tBasic.prototype.copy = function () {\r\n\t\t// copy the element and return the copy\r\n\t    var copy = new Basic(this.container, para);\r\n\t    copy._ctx.drawImage(this._canvas, 0, 0);\r\n\t\treturn copy;\r\n\t};\r\n\r\n\tBasic.prototype.draw = function () {\r\n\t    // draw element\r\n\t};\r\n\r\n\tBasic.prototype.clear = function () {\r\n\t    // clear the canvas\r\n\t    this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\r\n\t};\r\n\r\n\tBasic.prototype.getImage = function () {\r\n\t    // get the canvas image\r\n\t    var image = new Image();\r\n\t    image.src = this._canvas.toDataURL();\r\n\t    return image;\r\n\t};\r\n\r\n\tBasic.prototype.destroy = function () {\r\n\t    // destroy the element and release all memory\r\n\t    this._canvas = null;\r\n\t    this._ctx = null;\r\n\t};\r\n\r\n\tBasic.prototype.resize = function () {\r\n\t    // resize the canvas\r\n\t    this._canvas.width = this.container.offsetWidth;\r\n\t    this._canvas.height = this.container.offsetHeight;\r\n\t};\r\n\r\n\tDRAW.Basic = Basic;\r\n})(window.$$.draw);\r\n","window.$$ = window.$$ || {};\r\nwindow.$$.draw = window.$$.draw || {};\r\n\r\n(function (DRAW, FUNC) {\r\n    \"use strict\";\r\n\r\n    var FreeDraw = function (container, para) {\r\n        DRAW.Basic.call(this, container, para);\r\n        this._setupBinding();\r\n    };\r\n    FreeDraw.prototype = Object.create(DRAW.Basic.prototype);\r\n    FreeDraw.prototype.constructor = FreeDraw;\r\n\r\n    FreeDraw.prototype.startDrawing = function (para) {\r\n        // draw element\r\n        var para = para || {};\r\n        for (var i in para) this._ctx[i] = para[i];\r\n        this._ctx.beginPath();\r\n        this._startPos = null;\r\n        this._count = 0;\r\n        this._controlPos = null;\r\n        this.container.addEventListener(\"mousemove\", this._fn_draw, false);\r\n    };\r\n\r\n    FreeDraw.prototype.stopDrawing = function () {\r\n        this._startPos = null;\r\n        this.container.removeEventListener(\"mousemove\", this._fn_draw, false);\r\n    };\r\n\r\n    FreeDraw.prototype._setupBinding = function () {\r\n        var that = this;\r\n        //https://github.com/hongru/Canvas-Tattle/issues/19\r\n        this._startPos = null;\r\n        this._fn_draw = function (e) {\r\n            var mousePos = FUNC.getMousePos(e, this);\r\n            if (that._startPos === null) {\r\n                that._startPos = mousePos;\r\n                that._ctx.moveTo(mousePos[0], mousePos[1]);\r\n                return false;\r\n            } else if (that._controlPos === null) {\r\n                that._controlPos = mousePos;\r\n                return false;\r\n            }\r\n            if (Math.pow(mousePos[0] - that._controlPos[0], 2) + Math.pow(mousePos[1] - that._controlPos[1], 2)<9) return false;\r\n            //console.log(mousePos);\r\n            that._ctx.quadraticCurveTo(that._controlPos[0], that._controlPos[1], (that._controlPos[0]+mousePos[0])>>1, (that._controlPos[1]+mousePos[1])>>1);\r\n            that._ctx.stroke();\r\n            that._controlPos = mousePos;\r\n        };\r\n    };\r\n\r\n    DRAW.freeDraw = FreeDraw;\r\n})(window.$$.draw, window.$$.func);\r\n"],"sourceRoot":"/source/"}