{"version":3,"sources":["Drawing.Basic.js","Drawing.Free.js"],"names":[],"mappingsfile":"Drawing.js","sourcesContent":["window.$$ = window.$$ || {};\r\nwindow.$$.draw = window.$$.draw || {};\r\n\r\n(function (DRAW) {\r\n\t\"use strict\";\r\n\r\n\tvar Basic = function (container, para) {\r\n\t\tthis.container = container;\r\n\t\tthis.para = para;\r\n\t\tthis._canvas = document.createElement('canvas');\r\n\t\tthis._ctx = this._canvas.getContext('2d');\r\n\t};\r\n\tBasic.prototype = Object.create(null);\r\n\tBasic.prototype.constructor = Basic;\r\n\r\n\tBasic.prototype.copy = function () {\r\n\t\t// copy the element and return the copy\r\n\t    var copy = new Basic(this.container, para);\r\n\t    copy._ctx.drawImage(this._canvas, 0, 0);\r\n\t\treturn copy;\r\n\t};\r\n\r\n\tBasic.prototype.draw = function () {\r\n\t    // draw element\r\n\t};\r\n\r\n\tBasic.prototype.clear = function () {\r\n\t    // clear the canvas\r\n\t    this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\r\n\t};\r\n\r\n\tBasic.prototype.getImage = function () {\r\n\t    // get the canvas image\r\n\t    var image = new Image();\r\n\t    image.src = this._canvas.toDataURL();\r\n\t    return image;\r\n\t};\r\n\r\n\tBasic.prototype.destroy = function () {\r\n\t    // destroy the element and release all memory\r\n\t    this._canvas = null;\r\n\t    this._ctx = null;\r\n\t};\r\n\r\n\tDRAW.Basic = Basic;\r\n})(window.$$.draw);\r\n","window.$$ = window.$$ || {};\r\nwindow.$$.draw = window.$$.draw || {};\r\n\r\n(function (DRAW) {\r\n    \"use strict\";\r\n\r\n    var FreeDraw = function (container, para) {\r\n        DRAW.Basic.call(this, container, para);\r\n        this._setupBinding();\r\n    };\r\n    FreeDraw.prototype = Object.create(DRAW.Basic.prototype);\r\n    FreeDraw.prototype.constructor = FreeDraw;\r\n\r\n    FreeDraw.prototype.startDrawing = function (para) {\r\n        // draw element\r\n        var para = para || {};\r\n        //var style = para.color || '#000000';\r\n        //var thickness = para.thickness || 1;\r\n        //var join = para.join || 'round';\r\n\r\n        //this._ctx.lineWidth = thickness;\r\n        //this._ctx.strokeStyle = style;\r\n        //this._ctx.lineJoin = join;\r\n\r\n        for (var i in para) {\r\n            this._ctx[i] = para[i];\r\n        }\r\n\r\n        this._ctx.beginPath();\r\n        this._lastPos = null;\r\n        this.container.addEventListener(\"mousemove\", this._fn_draw, false);\r\n    };\r\n\r\n    FreeDraw.prototype.stopDrawing = function () {\r\n        this._lastPos = null;\r\n        this.container.removeEventListener(evt, this._fn_draw, false);\r\n    };\r\n\r\n    FreeDraw.prototype._setupBinding = function () {\r\n        var that = this;\r\n\r\n        var _getMousePos = function (e) {\r\n            var pos;\r\n            if (e.pageX == undefined) {\r\n                pos = [e.originalEvent.touches[0].pageX, e.originalEvent.touches[0].pageY];\r\n            } else {\r\n                pos = [e.pageX, e.pageY];\r\n            }\r\n            var viewportOffset = that._canvas.getBoundingClientRect();\r\n            pos[1] -= viewportOffset.top;\r\n            pos[0] -= viewportOffset.left\r\n            return pos;\r\n        };\r\n        \r\n        this._lastPos = null;\r\n        this._fn_draw = function (e) {\r\n            var mousePos = _getMousePos(e);\r\n            if (that._lastPos === null) {\r\n                that._lastPos = mousePos;\r\n                that._ctx.moveTo(mousePos[0], mousePos[1]);\r\n                return false;\r\n            }\r\n\r\n            that._ctx.lineTo(mousePos[0], mousePos[1]);\r\n            that._ctx.stroke();\r\n            that._lastPos = mousePos;\r\n        };\r\n    };\r\n\r\n    DRAW.freeDraw = FreeDraw;\r\n})(window.$$.draw);\r\n"]}