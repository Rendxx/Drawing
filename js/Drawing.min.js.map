{"version":3,"sources":["Func.js","Drawing.Basic.js","Drawing.Line.js","Drawing.Free.js"],"names":["window","$$","Func","FUNC","offsetScreen","node","document","body","top","left","offsetTop","offsetLeft","parentNode","scrollTop","scrollLeft","getMousePos","e","parent","pos","undefined","pageX","originalEvent","touches","pageY","offset","Draw","DRAW","Basic","container","opts","this","_canvas","createElement","_ctx","getContext","appendChild","style","position","hasOwnProperty","zIndex","resize","prototype","Object","create","constructor","copy","para","drawImage","draw","clear","clearRect","width","height","getImage","image","Image","src","toDataURL","destroy","removeChild","offsetWidth","offsetHeight","Line","call","start","end","Error","i","beginPath","moveTo","lineTo","stroke","lineWidth","x","y","len","Math","sqrt","angle","atan2","wid","min","max","translate","rotate","fillStyle","createPattern","fillRect","FreeDraw","_canvas2","_ctx2","_controlPos","_lastPos","_isDrawing","_setupBinding","startDrawing","_startPos","addEventListener","_fn_draw","stopDrawing","removeEventListener","quadraticCurveTo","that","_controlPos2","mousePos","pow","setTimeout"],"mappings":"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","file":"Drawing.min.js","sourcesContent":["window.$$ = window.$$ || {};\r\nwindow.$$.Func = window.$$.Func || {};\r\n\r\n(function (FUNC) {\r\n    \"use strict\";\r\n    FUNC.offsetScreen = function (node) {\r\n        if (node === document.body) return {top:0, left:0};\r\n        var top = node.offsetTop,\r\n            left = node.offsetLeft;\r\n        node = node.parentNode;\r\n        while (node !== document.body) {\r\n            top -= node.scrollTop;\r\n            left -= node.scrollLeft;\r\n            node = node.parentNode;\r\n        }\r\n        return { top: top, left: left };\r\n    };\r\n    \r\n    FUNC.getMousePos = function (e, parent) {\r\n        var pos;\r\n        if (e.pageX == undefined) {\r\n            pos = [e.originalEvent.touches[0].pageX, e.originalEvent.touches[0].pageY];\r\n        } else {\r\n            pos = [e.pageX, e.pageY];\r\n        }\r\n        if (parent != undefined) {\r\n            var offset = FUNC.offsetScreen(parent);\r\n            pos[0] -= offset.left;\r\n            pos[1] -= offset.top;\r\n        }\r\n        return pos;\r\n    };\r\n\r\n})(window.$$.Func);\r\n","/************************************************ \r\nDrawing Library\r\nCopyright (c) 2014-2016 Dongxu Ren  http://www.rendxx.com/\r\n\r\nLicense: MIT (http://www.opensource.org/licenses/mit-license.php)\r\nVersion: 0.4.3\r\nUpdate: 2016-11-15\r\n************************************************/\r\n\r\nwindow.$$ = window.$$ || {};\r\nwindow.$$.Draw = window.$$.Draw || {};\r\n\r\n(function (DRAW) {\r\n\t\"use strict\";\r\n\r\n\tvar Basic = function (container, opts) {\r\n\t\tthis.container = container;\r\n\t\tthis.opts = opts || {};\r\n\t\tthis._canvas = document.createElement('canvas');\r\n\t\tthis._ctx = this._canvas.getContext('2d');\r\n\t\tthis.container.appendChild(this._canvas);\r\n\t\t//if (this.container.style.position != \"relative\" && this.container.style.position != \"absolute\") this.container.style.position = \"relative\";\r\n\t\tthis._canvas.style.position = 'absolute';\r\n\t\tthis._canvas.style.top = '0';\r\n\t\tthis._canvas.style.left = '0';\r\n\t\tif (this.opts.hasOwnProperty(\"zIndex\")) this._canvas.style.zIndex = this.opts.zIndex;\r\n\t\tthis.resize();\r\n\t};\r\n\tBasic.prototype = Object.create(null);\r\n\tBasic.prototype.constructor = Basic;\r\n\r\n\tBasic.prototype.copy = function () {\r\n\t\t// copy the element and return the copy\r\n\t    var copy = new Basic(this.container, para);\r\n\t    copy._ctx.drawImage(this._canvas, 0, 0);\r\n\t\treturn copy;\r\n\t};\r\n\r\n\tBasic.prototype.draw = function () {\r\n\t    // draw element\r\n\t};\r\n\r\n\tBasic.prototype.clear = function () {\r\n\t    // clear the canvas\r\n\t    this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\r\n\t};\r\n\r\n\tBasic.prototype.getImage = function () {\r\n\t    // get the canvas image\r\n\t    var image = new Image();\r\n\t    image.src = this._canvas.toDataURL();\r\n\t    return image;\r\n\t};\r\n\r\n\tBasic.prototype.destroy = function () {\r\n\t    // destroy the element and release all memory\r\n\t    this._canvas.parentNode.removeChild(this._canvas);\r\n\t    this._canvas = null;\r\n\t    this._ctx = null;\r\n\t};\r\n\r\n\tBasic.prototype.resize = function () {\r\n\t    // resize the canvas\r\n\t    this._canvas.width = this.container.offsetWidth;\r\n\t    this._canvas.height = this.container.offsetHeight;\r\n\t};\r\n\r\n\tDRAW.Basic = Basic;\r\n})(window.$$.Draw);\r\n","/************************************************ \r\nDrawing Library\r\nCopyright (c) 2014-2016 Dongxu Ren  http://www.rendxx.com/\r\n\r\nLicense: MIT (http://www.opensource.org/licenses/mit-license.php)\r\nVersion: 0.4.3\r\nUpdate: 2016-11-15\r\n************************************************/\r\n\r\nwindow.$$ = window.$$ || {};\r\nwindow.$$.Draw = window.$$.Draw || {};\r\n\r\n(function (DRAW) {\r\n    \"use strict\";\r\n\r\n    var Line = function (container, opts) {\r\n        DRAW.Basic.call(this, container, opts);\r\n        this.start = null;\r\n        this.end = null;\r\n    };\r\n    Line.prototype = Object.create(DRAW.Basic.prototype);\r\n    Line.prototype.constructor = Line;\r\n\r\n    Line.prototype.copy = function () {\r\n        var copy = DRAW.Basic.prototype.copy.call(this);\r\n        copy.start = this.start;\r\n        copy.end = this.end;\r\n    };\r\n\r\n    Line.prototype.draw = function (start, end, para) {\r\n        // draw element\r\n        if (start == null || end == null) throw new Error(\"parameter error\");\r\n        this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\r\n        this.start = start;\r\n        this.end = end;\r\n\r\n        var para = para || {};\r\n        for (var i in para) this._ctx[i] = para[i];\r\n        var image = para.image || null;\r\n\r\n        if (image == null) {\r\n            this._ctx.beginPath();\r\n            this._ctx.moveTo(start[0], start[1]);\r\n            this._ctx.lineTo(end[0], end[1]);\r\n            this._ctx.stroke();\r\n            return;\r\n        }\r\n        \r\n        var lineWidth = para.lineWidth || 1;\r\n        var x = start[0] - end[0];\r\n        var y = start[1] - end[1];\r\n        var len = Math.sqrt(x*x+y*y);\r\n        var angle = Math.atan2(x, -y);\r\n        var offset = -image.width / 2;\r\n        var wid = Math.min(image.width, lineWidth);\r\n        var left = Math.max((image.width - lineWidth)/2, 0);\r\n\r\n        this._ctx.translate(start[0], start[1]);\r\n        this._ctx.rotate(angle);\r\n\r\n        this._ctx.translate(offset, 0);\r\n        this._ctx.fillStyle = this._ctx.createPattern(image, 'repeat-y');\r\n        this._ctx.fillRect(left, 0, wid, len);\r\n        this._ctx.translate(-offset, 0);\r\n\r\n        this._ctx.rotate(-angle);\r\n        this._ctx.translate(-start[0] , -start[1]);\r\n    };\r\n\r\n    DRAW.Line = Line;\r\n})(window.$$.Draw);\r\n","/************************************************ \r\nDrawing Library\r\nCopyright (c) 2014-2016 Dongxu Ren  http://www.rendxx.com/\r\n\r\nLicense: MIT (http://www.opensource.org/licenses/mit-license.php)\r\nVersion: 0.4.3\r\nUpdate: 2016-11-15\r\n************************************************/\r\n\r\nwindow.$$ = window.$$ || {};\r\nwindow.$$.Draw = window.$$.Draw || {};\r\n\r\n(function (DRAW, FUNC) {\r\n    \"use strict\";\r\n\r\n    var FreeDraw = function (container, opts) {\r\n        DRAW.Basic.call(this, container, opts);\r\n        this._canvas2 = document.createElement('canvas');\r\n        this._canvas2.style.position = 'absolute';\r\n        this._canvas2.style.top = '0';\r\n        this._canvas2.style.left = '0';\r\n        this._canvas2.style.zIndex = (this._canvas.style.zIndex || 0)+1;\r\n        this._ctx2 = this._canvas2.getContext('2d');\r\n        container.appendChild(this._canvas2);\r\n\r\n        this._controlPos = null;\r\n        this._lastPos = null;\r\n        this._isDrawing = false;\r\n\r\n        this._setupBinding();\r\n        this.resize();\r\n    };\r\n    FreeDraw.prototype = Object.create(DRAW.Basic.prototype);\r\n    FreeDraw.prototype.constructor = FreeDraw;\r\n\r\n    FreeDraw.prototype.startDrawing = function (para) {\r\n        // draw element\r\n        var para = para || {};\r\n        for (var i in para) {\r\n            this._ctx[i] = para[i];\r\n            this._ctx2[i] = para[i];\r\n        }\r\n        this._ctx.beginPath();\r\n        this._ctx2.beginPath();\r\n        this._startPos = null;\r\n        this._isDrawing = true;\r\n\r\n        this.container.addEventListener(\"mousemove\", this._fn_draw, false);\r\n    };\r\n\r\n    FreeDraw.prototype.stopDrawing = function () {\r\n        this._startPos = null;\r\n        this.container.removeEventListener(\"mousemove\", this._fn_draw, false);\r\n        \r\n        this._ctx2.clearRect(0, 0, this._canvas2.width, this._canvas2.height);\r\n        if (this._lastPos !== null && this._controlPos!==null) {\r\n            this._ctx.quadraticCurveTo(this._controlPos[0], this._controlPos[1], (this._controlPos[0] + this._lastPos[0]) >> 1, (this._controlPos[1] + this._lastPos[1]) >> 1);\r\n            this._ctx.stroke();\r\n        }\r\n        this._lastPos = null;\r\n    };\r\n\r\n    FreeDraw.prototype._setupBinding = function () {\r\n        var that = this;\r\n        //https://github.com/hongru/Canvas-Tattle/issues/19\r\n        this._startPos = null;\r\n        this._controlPos = null;\r\n        var _controlPos2 = null;\r\n\r\n        this._fn_draw = function (e) {\r\n            var mousePos = FUNC.getMousePos(e, this);\r\n            that._lastPos = mousePos;\r\n            if (that._startPos === null) {\r\n                that._startPos = mousePos;\r\n                that._ctx.moveTo(mousePos[0], mousePos[1]);\r\n                that._ctx2.moveTo(mousePos[0], mousePos[1]);\r\n                that._controlPos = null;\r\n                _controlPos2 = null;\r\n                return false;\r\n            } else if (that._controlPos === null) {\r\n                that._controlPos = mousePos;\r\n                _controlPos2 = mousePos;\r\n                return false;\r\n            }\r\n            if (that._isDrawing || (Math.pow(mousePos[0] - that._controlPos[0], 2) + Math.pow(mousePos[1] - that._controlPos[1], 2) >= 400)) {\r\n                that._ctx2.clearRect(0, 0, that._canvas2.width, that._canvas2.height);\r\n                that._ctx2.beginPath();\r\n\r\n                var end = [(that._controlPos[0] + mousePos[0]) >> 1, (that._controlPos[1] + mousePos[1]) >> 1];\r\n                that._ctx2.moveTo(end[0], end[1]);\r\n                that._isDrawing = false;\r\n                that._ctx.quadraticCurveTo(that._controlPos[0], that._controlPos[1], end[0], end[1]);\r\n                that._ctx.stroke();\r\n                that._controlPos = mousePos;\r\n                setTimeout(function () { that._isDrawing = true; }, 100);\r\n            } else {\r\n                that._ctx2.quadraticCurveTo(_controlPos2[0], _controlPos2[1], (_controlPos2[0] + mousePos[0]) >> 1, (_controlPos2[1] + mousePos[1]) >> 1);\r\n                that._ctx2.stroke();\r\n                _controlPos2 = mousePos;\r\n            }\r\n\r\n            return false;\r\n        };\r\n    };\r\n\r\n    FreeDraw.prototype.resize = function () {\r\n        DRAW.Basic.prototype.resize.call(this);\r\n        if (this._canvas2 != null) {\r\n            this._canvas2.width = this.container.offsetWidth;\r\n            this._canvas2.height = this.container.offsetHeight;\r\n        }\r\n    };\r\n\r\n    FreeDraw.prototype.destroy = function () {\r\n        DRAW.Basic.prototype.destroy.call(this);\r\n        this._canvas2.parentNode.removeChild(this._canvas2);\r\n        this._canvas2 = null;\r\n        this._ctx2 = null;\r\n    };\r\n\r\n    DRAW.FreeDraw = FreeDraw;\r\n})(window.$$.Draw, window.$$.Func);\r\n"],"sourceRoot":"/source/"}