{"version":3,"sources":["Func.js","Drawing.Basic.js","Drawing.Line.js","Drawing.Free.js"],"names":["window","$$","Func","FUNC","offsetScreen","node","document","body","top","left","offsetTop","offsetLeft","parentNode","scrollTop","scrollLeft","getMousePos","e","parent","pos","undefined","pageX","originalEvent","touches","pageY","offset","Draw","DRAW","Basic","container","para","this","_canvas","createElement","_ctx","getContext","appendChild","style","position","resize","prototype","Object","create","constructor","copy","drawImage","draw","clear","clearRect","width","height","getImage","image","Image","src","toDataURL","destroy","offsetWidth","offsetHeight","Line","call","start","end","Error","i","beginPath","moveTo","lineTo","stroke","lineWidth","x","y","len","Math","sqrt","angle","atan2","wid","min","max","translate","rotate","fillStyle","createPattern","fillRect","FreeDraw","_setupBinding","startDrawing","_startPos","_count","_controlPos","addEventListener","_fn_draw","stopDrawing","removeEventListener","that","mousePos","pow","quadraticCurveTo"],"mappings":"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","file":"Drawing.min.js","sourcesContent":["window.$$ = window.$$ || {};\r\nwindow.$$.Func = window.$$.Func || {};\r\n\r\n(function (FUNC) {\r\n    \"use strict\";\r\n    FUNC.offsetScreen = function (node) {\r\n        if (node === document.body) return {top:0, left:0};\r\n        var top = node.offsetTop,\r\n            left = node.offsetLeft;\r\n        node = node.parentNode;\r\n        while (node !== document.body) {\r\n            top -= node.scrollTop;\r\n            left -= node.scrollLeft;\r\n            node = node.parentNode;\r\n        }\r\n        return { top: top, left: left };\r\n    };\r\n    \r\n    FUNC.getMousePos = function (e, parent) {\r\n        var pos;\r\n        if (e.pageX == undefined) {\r\n            pos = [e.originalEvent.touches[0].pageX, e.originalEvent.touches[0].pageY];\r\n        } else {\r\n            pos = [e.pageX, e.pageY];\r\n        }\r\n        if (parent != undefined) {\r\n            var offset = FUNC.offsetScreen(parent);\r\n            pos[0] -= offset.left;\r\n            pos[1] -= offset.top;\r\n        }\r\n        return pos;\r\n    };\r\n\r\n})(window.$$.Func);\r\n","window.$$ = window.$$ || {};\r\nwindow.$$.Draw = window.$$.Draw || {};\r\n\r\n(function (DRAW) {\r\n\t\"use strict\";\r\n\r\n\tvar Basic = function (container, para) {\r\n\t\tthis.container = container;\r\n\t\tthis.para = para;\r\n\t\tthis._canvas = document.createElement('canvas');\r\n\t\tthis._ctx = this._canvas.getContext('2d');\r\n\t\tthis.container.appendChild(this._canvas);\r\n\t\tif (this.container.style.position != \"relative\" && this.container.style.position != \"absolute\") this.container.style.position = \"relative\";\r\n\t\tthis._canvas.style.position = 'absolute';\r\n\t\tthis._canvas.style.top = '0';\r\n\t\tthis._canvas.style.left = '0';\r\n\t\tthis.resize();\r\n\t};\r\n\tBasic.prototype = Object.create(null);\r\n\tBasic.prototype.constructor = Basic;\r\n\r\n\tBasic.prototype.copy = function () {\r\n\t\t// copy the element and return the copy\r\n\t    var copy = new Basic(this.container, para);\r\n\t    copy._ctx.drawImage(this._canvas, 0, 0);\r\n\t\treturn copy;\r\n\t};\r\n\r\n\tBasic.prototype.draw = function () {\r\n\t    // draw element\r\n\t};\r\n\r\n\tBasic.prototype.clear = function () {\r\n\t    // clear the canvas\r\n\t    this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\r\n\t};\r\n\r\n\tBasic.prototype.getImage = function () {\r\n\t    // get the canvas image\r\n\t    var image = new Image();\r\n\t    image.src = this._canvas.toDataURL();\r\n\t    return image;\r\n\t};\r\n\r\n\tBasic.prototype.destroy = function () {\r\n\t    // destroy the element and release all memory\r\n\t    this._canvas = null;\r\n\t    this._ctx = null;\r\n\t};\r\n\r\n\tBasic.prototype.resize = function () {\r\n\t    // resize the canvas\r\n\t    this._canvas.width = this.container.offsetWidth;\r\n\t    this._canvas.height = this.container.offsetHeight;\r\n\t};\r\n\r\n\tDRAW.Basic = Basic;\r\n})(window.$$.Draw);\r\n","window.$$ = window.$$ || {};\r\nwindow.$$.Draw = window.$$.Draw || {};\r\n\r\n(function (DRAW) {\r\n    \"use strict\";\r\n\r\n    var Line = function (container, para) {\r\n        DRAW.Basic.call(this, container, para);\r\n        this.start = null;\r\n        this.end = null;\r\n    };\r\n    Line.prototype = Object.create(DRAW.Basic.prototype);\r\n    Line.prototype.constructor = Line;\r\n\r\n    Line.prototype.copy = function () {\r\n        var copy = DRAW.Basic.prototype.copy.call(this);\r\n        copy.start = this.start;\r\n        copy.end = this.end;\r\n    };\r\n\r\n    Line.prototype.draw = function (start, end, para) {\r\n        // draw element\r\n        if (start == null || end == null) throw new Error(\"parameter error\");\r\n        this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\r\n        this.start = start;\r\n        this.end = end;\r\n\r\n        var para = para || {};\r\n        for (var i in para) this._ctx[i] = para[i];\r\n        var image = para.image || null;\r\n\r\n        if (image == null) {\r\n            this._ctx.beginPath();\r\n            this._ctx.moveTo(start[0], start[1]);\r\n            this._ctx.lineTo(end[0], end[1]);\r\n            this._ctx.stroke();\r\n            return;\r\n        }\r\n        \r\n        var lineWidth = para.lineWidth || 1;\r\n        var x = start[0] - end[0];\r\n        var y = start[1] - end[1];\r\n        var len = Math.sqrt(x*x+y*y);\r\n        var angle = Math.atan2(x, -y);\r\n        var offset = -image.width / 2;\r\n        var wid = Math.min(image.width, lineWidth);\r\n        var left = Math.max((image.width - lineWidth)/2, 0);\r\n\r\n        this._ctx.translate(start[0], start[1]);\r\n        this._ctx.rotate(angle);\r\n\r\n        this._ctx.translate(offset, 0);\r\n        this._ctx.fillStyle = this._ctx.createPattern(image, 'repeat-y');\r\n        this._ctx.fillRect(left, 0, wid, len);\r\n        this._ctx.translate(-offset, 0);\r\n\r\n        this._ctx.rotate(-angle);\r\n        this._ctx.translate(-start[0] , -start[1]);\r\n    };\r\n\r\n    DRAW.Line = Line;\r\n})(window.$$.Draw);\r\n","window.$$ = window.$$ || {};\r\nwindow.$$.Draw = window.$$.Draw || {};\r\n\r\n(function (DRAW, FUNC) {\r\n    \"use strict\";\r\n\r\n    var FreeDraw = function (container, para) {\r\n        DRAW.Basic.call(this, container, para);\r\n        this._setupBinding();\r\n    };\r\n    FreeDraw.prototype = Object.create(DRAW.Basic.prototype);\r\n    FreeDraw.prototype.constructor = FreeDraw;\r\n\r\n    FreeDraw.prototype.startDrawing = function (para) {\r\n        // draw element\r\n        var para = para || {};\r\n        for (var i in para) this._ctx[i] = para[i];\r\n        this._ctx.beginPath();\r\n        this._startPos = null;\r\n        this._count = 0;\r\n        this._controlPos = null;\r\n        this.container.addEventListener(\"mousemove\", this._fn_draw, false);\r\n    };\r\n\r\n    FreeDraw.prototype.stopDrawing = function () {\r\n        this._startPos = null;\r\n        this.container.removeEventListener(\"mousemove\", this._fn_draw, false);\r\n    };\r\n\r\n    FreeDraw.prototype._setupBinding = function () {\r\n        var that = this;\r\n        //https://github.com/hongru/Canvas-Tattle/issues/19\r\n        this._startPos = null;\r\n        this._fn_draw = function (e) {\r\n            var mousePos = FUNC.getMousePos(e, this);\r\n            if (that._startPos === null) {\r\n                that._startPos = mousePos;\r\n                that._ctx.moveTo(mousePos[0], mousePos[1]);\r\n                return false;\r\n            } else if (that._controlPos === null) {\r\n                that._controlPos = mousePos;\r\n                return false;\r\n            }\r\n            that._count++;\r\n            if (that._count<5 && (Math.pow(mousePos[0] - that._controlPos[0], 2) + Math.pow(mousePos[1] - that._controlPos[1], 2) < 9)) return false;\r\n            //console.log(mousePos);\r\n            that._count=0;\r\n            that._ctx.quadraticCurveTo(that._controlPos[0], that._controlPos[1], (that._controlPos[0]+mousePos[0])>>1, (that._controlPos[1]+mousePos[1])>>1);\r\n            that._ctx.stroke();\r\n            that._controlPos = mousePos;\r\n        };\r\n    };\r\n\r\n    DRAW.FreeDraw = FreeDraw;\r\n})(window.$$.Draw, window.$$.Func);\r\n"]}