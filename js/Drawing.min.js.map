{"version":3,"sources":["Drawing.js"],"names":["_HTML","_Shape","this","ele","inner","deg","move","left","top","cssList","parseInt","css","moveTo","undefined","rotate","r","rotation","transform2D","rotateTo","scaleTo","ratio","scaleX","scaleY","show","hide","destroy","remove","setOpts","opts","opts_in","that","_base","_buffer_h","_t","_l","_html","body","start","end","endPoint","ptrStart","ptrEnd","options","container","$","width","z-index","background","color","image","pointer","position","radius","lineTo","startPoint","Math","atan2","PI","sqrt","height","translateX","sin","translateY","cos","rate","_setOpts","_render","i","max_w","cssListEle","cssListBody","cssListStart","cssListEnd","_buildEle","Line","appendTo","children","margin","padding","border","background-position","constructor","prototype","Base","_initDrawing","create","shapeType","base","window","$$","drawing"],"mappings":"CAiEA,WACA,YAEA,IAAAA,KACAA,GAAA,KAAA,GACAA,EAAA,KAAA,iLAEA,IAAAC,KACAA,GAAA,KAAA,WACAC,KAAAC,IACAD,KAAAE,MACAF,KAAAG,IAEAH,KAAAI,KAAA,SAAAC,EAAAC,GACA,GAAA,MAAAN,KAAAC,IAAA,CACA,GAAAM,IACAF,KAAAG,SAAAR,KAAAE,MAAAO,IAAA,UAAAJ,EAAAA,EAAA,GAAA,KACAC,IAAAE,SAAAR,KAAAE,MAAAO,IAAA,SAAAH,EAAAA,EAAA,GAAA,KAEAN,MAAAC,IAAAQ,IAAAF,KAGAP,KAAAU,OAAA,SAAAL,EAAAC,GACA,GAAA,MAAAN,KAAAC,IAAA,CACA,GAAAM,KACA,QAAAF,GAAAM,SAAAN,IAAAE,EAAA,KAAAF,EAAA,MACA,OAAAC,GAAAK,SAAAL,IAAAC,EAAA,IAAAD,EAAA,MACAN,KAAAC,IAAAQ,IAAAF,KAGAP,KAAAY,OAAA,SAAAT,GACA,GAAA,MAAAH,KAAAC,IAAA,CACA,GAAAY,GAAAb,KAAAE,MAAAY,UACAd,MAAAE,MAAAa,aACAH,OAAAC,EAAAV,MAIAH,KAAAgB,SAAA,SAAAb,GACA,MAAAH,KAAAC,KACAD,KAAAE,MAAAa,aACAH,OAAAT,KAIAH,KAAAiB,QAAA,SAAAC,GACA,MAAAlB,KAAAC,KACAD,KAAAE,MAAAa,aACAI,OAAAD,EACAE,OAAAF,KAKAlB,KAAAqB,KAAA,WACA,MAAArB,KAAAC,KACAD,KAAAC,IAAAoB,QAGArB,KAAAsB,KAAA,WACA,MAAAtB,KAAAC,KACAD,KAAAC,IAAAqB,QAGAtB,KAAAuB,QAAA,WACA,MAAAvB,KAAAC,KACAD,KAAAC,IAAAuB,UAGAxB,KAAAyB,QAAA,SAAAC,MAIA3B,EAAA,KAAA,SAAA4B,GACA,GAAAC,GAAA5B,KACA6B,EAAA7B,KACA8B,EAAA,EACAC,EAAA,EACAC,EAAA,EAEAC,GACAC,KAAA,KACAC,MAAA,KACAC,IAAA,MAEAC,GACAhC,KAAA,EACAC,IAAA,EAGAN,MAAAsC,SAAA,KACAtC,KAAAuC,OAAA,KACAvC,KAAAwC,SACAC,UAAAC,EAAA,QACAC,MAAA,EACAC,UAAA,EACAC,YACAC,MAAA,OACAC,MAAA,MAEAC,SACAb,OACAY,MAAA,KACAE,SAAA,KACAC,OAAA,GAEAd,KACAW,MAAA,KACAE,SAAA,KACAC,OAAA,KAKAlD,KAAAmD,OAAA,SAAA9C,EAAAC,GACA,OAAAD,GAAAM,SAAAN,IAAAgC,EAAA,KAAAhC,GACA,OAAAC,GAAAK,SAAAL,IAAA+B,EAAA,IAAA/B,EAGA,IAAA8C,IACA/C,KAAAG,SAAAoB,EAAA3B,IAAAQ,IAAA,SACAH,IAAAE,SAAAoB,EAAA3B,IAAAQ,IAAA,QAGAuB,GAAAK,EAAAhC,KAAA+C,EAAA/C,KACA0B,EAAAM,EAAA/B,IAAA8C,EAAA9C,GACA,IAAAH,GAAA,KAAAkD,KAAAC,MAAAtB,EAAAD,GAAAsB,KAAAE,EACAzB,GAAAuB,KAAAG,KAAAxB,EAAAA,EAAAD,EAAAA,GAAAH,EAAAY,QAAAQ,QAAAb,MAAAe,OAAAtB,EAAAY,QAAAQ,QAAAZ,IAAAc,OACAtB,EAAA3B,IAAAQ,IAAA,WAAA,UACAmB,EAAA1B,MAAAuD,OAAA3B,GACAG,EAAA,KAAAwB,OAAA3B,EAAA,EAAAF,EAAAY,QAAAQ,QAAAb,MAAAe,OAAAtB,EAAAY,QAAAQ,QAAAZ,IAAAc,QAEAlD,KAAAgB,SAAAb,GACAyB,EAAA3B,IAAAQ,IAAA,WAAA,YAGAT,KAAAY,OAAA,SAAAT,GACA,GAAA,MAAAH,KAAAC,IAAA,CACA,GAAAY,GAAAe,EAAA1B,MAAAY,UAEAc,GAAA1B,MAAAa,aACAH,OAAAC,EAAAV,EACAuD,aAAA5B,EAAA,EAAAF,EAAAY,QAAAQ,QAAAb,MAAAe,QAAAG,KAAAM,IAAAxD,EAAA,IAAAkD,KAAAE,IACAK,YAAA9B,EAAA,EAAAF,EAAAY,QAAAQ,QAAAb,MAAAe,QAAAG,KAAAQ,IAAA1D,EAAA,IAAAkD,KAAAE,IAAAzB,EAAA,MAKA9B,KAAAgB,SAAA,SAAAb,GACA,MAAAH,KAAAC,KAEA2B,EAAA1B,MAAAa,aACAH,OAAAT,EACAuD,aAAA5B,EAAA,EAAAF,EAAAY,QAAAQ,QAAAb,MAAAe,QAAAG,KAAAM,IAAAxD,EAAA,IAAAkD,KAAAE,IACAK,YAAA9B,EAAA,EAAAF,EAAAY,QAAAQ,QAAAb,MAAAe,QAAAG,KAAAQ,IAAA1D,EAAA,IAAAkD,KAAAE,IAAAzB,EAAA,KAKA9B,KAAAiB,QAAA,SAAA6C,KAIA9D,KAAAyB,QAAA,SAAAC,GACAqC,EAAArC,GACAsC,IAGA,IAAAD,GAAA,SAAArC,GACA,GAAA,MAAAA,EAAA,CAKA,GAJAA,EAAA,YAAAE,EAAAY,QAAA,UAAAd,EAAA,WACAA,EAAA,QAAAE,EAAAY,QAAA,MAAAd,EAAA,OACAA,EAAA,aAAAE,EAAAY,QAAA,WAAAd,EAAA,YAEAA,EAAAmB,WACA,IAAA,GAAAoB,KAAAvC,GAAAmB,WACAjB,EAAAY,QAAAK,WAAAoB,GAAAvC,EAAAmB,WAAAoB,EAEA,IAAAvC,EAAAsB,QACA,IAAA,GAAAiB,KAAAvC,GAAAsB,QACApB,EAAAY,QAAAQ,QAAAiB,GAAAvC,EAAAsB,QAAAiB,KAIAD,EAAA,WACA,GAAAtC,GAAAE,EAAAY,QAGA0B,EAAAxC,EAAA,KACAwC,GAAA,EAAAxC,EAAAsB,QAAAb,MAAAe,SAAAgB,EAAA,EAAAxC,EAAAsB,QAAAb,MAAAe,QACAgB,EAAA,EAAAxC,EAAAsB,QAAAZ,IAAAc,SAAAgB,EAAA,EAAAxC,EAAAsB,QAAAZ,IAAAc,QAEAtB,EAAA3B,IAAAQ,IAAA,UAAAiB,EAAA,WAEA,IAAAyC,KACAA,GAAA,MAAAD,EAAA,KACAC,EAAA,IAAA,MACAA,EAAA,MAAAD,EAAA,EAAA,KACAtC,EAAA1B,MAAAO,IAAA0D,EAGA,IAAAC,KACAA,GAAA,MAAA1C,EAAA,MAAA,KACA0C,EAAA,cAAA,MACAA,EAAA,gBAAAF,EAAAxC,EAAA,OAAA,EAAA,KACA0C,EAAA,oBAAA1C,EAAAmB,WAAAC,MACAsB,EAAA,oBAAA,MAAA1C,EAAAmB,WAAAE,MAAA,KAAA,QAAArB,EAAAmB,WAAAE,MAAA,KACAd,EAAA,KAAAxB,IAAA2D,EAGA,IAAAC,KACAA,GAAA,oBAAA,MAAA3C,EAAAsB,QAAAb,MAAAY,MAAA,KAAA,QAAArB,EAAAsB,QAAAb,MAAAY,MAAA,KACAsB,EAAA,uBAAA,MAAA3C,EAAAsB,QAAAb,MAAAc,SAAA,KAAAvB,EAAAsB,QAAAb,MAAAc,SACAoB,EAAA,OAAAA,EAAA,MAAA,EAAA3C,EAAAsB,QAAAb,MAAAe,OAAA,KACAmB,EAAA,eAAAH,EAAA,EAAAxC,EAAAsB,QAAAb,MAAAe,OAAA,KACAjB,EAAA,MAAAxB,IAAA4D,EAGA,IAAAC,KACAA,GAAA,oBAAA,MAAA5C,EAAAsB,QAAAZ,IAAAW,MAAA,KAAA,QAAArB,EAAAsB,QAAAZ,IAAAW,MAAA,KACAuB,EAAA,uBAAA,MAAA5C,EAAAsB,QAAAZ,IAAAa,SAAA,KAAAvB,EAAAsB,QAAAZ,IAAAa,SACAqB,EAAA,OAAAA,EAAA,MAAA,EAAA5C,EAAAsB,QAAAZ,IAAAc,OAAA,KACAoB,EAAA,eAAAJ,EAAA,EAAAxC,EAAAsB,QAAAZ,IAAAc,OAAA,KACAoB,EAAA,eAAA5C,EAAAsB,QAAAZ,IAAAc,OAAA,KACAjB,EAAA,IAAAxB,IAAA6D,IAGAC,EAAA,WACA3C,EAAA3B,IAAAyC,EAAA5C,EAAA0E,MACA5C,EAAA3B,IAAAwE,SAAA7C,EAAAY,QAAAC,WACAb,EAAA1B,MAAA0B,EAAA3B,IAAAyE,SAAA,iBACAzC,EAAA,KAAAL,EAAA1B,MAAAwE,SAAA,sBACAzC,EAAA,MAAAL,EAAA1B,MAAAwE,SAAA,uBACAzC,EAAA,IAAAL,EAAA1B,MAAAwE,SAAA,qBACA9C,EAAAU,SAAAL,EAAA,MACAL,EAAAW,OAAAN,EAAA,IAEAL,EAAA3B,IAAAQ,KACAwC,SAAA,WACA0B,OAAA,MACAC,QAAA,MACAC,OAAA,MACAvE,IAAA,MACAD,KAAA,MACAsC,MAAA,MACAc,OAAA,QAEA7B,EAAA1B,MAAAO,KACAwC,SAAA,WACA0B,OAAA,MACAC,QAAA,MACAC,OAAA,MACAvE,IAAA,MACAD,KAAA,QAEA4B,EAAA,KAAAxB,KACAmC,UAAA,IACAD,MAAA,MACAc,OAAA,OACAkB,OAAA,MACAG,sBAAA,kBAEA7C,EAAA,MAAAxB,KACAmC,UAAA,IACAD,MAAA,MACAc,OAAA,MACAkB,OAAA,QAEA1C,EAAA,IAAAxB,KACAmC,UAAA,IACAD,MAAA,MACAc,OAAA,MACAkB,OAAA,QAGAX,MAGA,SAAAtC,GACAG,EAAAD,EAAAmD,YAAAC,UAAA,GAAAjF,GAAAkF,KACAlB,EAAArC,GACA6C,IACAP,MACArC,GAIA,IAAAuD,GAAA,WACAlF,KAAAmF,OAAA,SAAAC,EAAA1D,GACA,MAAA0D,KAAArF,IAAA,QAAAqF,GACArF,EAAAqF,GAAAJ,UAAA,GAAAjF,GAAAkF,KACAlF,EAAAqF,GAAAC,KAAAtF,EAAAqF,GAAAJ,UACA,GAAAjF,GAAAqF,GAAA1D,IAHA,MASA4D,QAAAC,GAAAD,OAAAC,OACAD,OAAAC,GAAAC,QAAA,GAAAN","file":"Drawing.min.js","sourcesContent":["/************************************************ \r\nDrawing Library\r\nCopyright (c) 2014-2015 Dongxu Ren  http://www.rendxx.com/\r\n\r\nLicense: MIT (http://www.opensource.org/licenses/mit-license.php)\r\nVersion: 0.2.3\r\nUpdate: 2015-10-18\r\n\r\nDescription:\r\n    Draw shape in selected HTML container\r\n    \r\nCompatibility:\r\n    Chrome; Fire Fox; Safari; Edge; IE 9-11; IE 7,8;\r\n \r\nDependency:\r\n    jQuery\r\n    Transform2D\r\n\r\nAPI-Drawing Library:\r\n    $$.drawing.create(shapeType, opts)\r\n        - (object) Create a specific shape object with given options\r\n    \r\nAPI-Base:\r\n    [Shape].show()/hide()\r\n        - show/hide shpae element\r\n    \r\n    [Shape].move(left, top)\r\n        - pan left/top from current position\r\n    \r\n    [Shape].moveTo(left, top)\r\n        - move to given position\r\n    \r\n    [Shape].rotate(deg)\r\n        - rotate given deg clockwise\r\n    \r\n    [Shape].rotateTo(deg)\r\n        - rotate to given deg clockwise from origin\r\n    \r\n    [Shape].scaleTo(ratio)\r\n        - scale to given ratio\r\n    \r\n    [Shape].setOpts()\r\n        - reset options and re-render the shape\r\n\r\n    [Shape].destroy()\r\n        - destroy the object\r\n    \r\nAPI-Line:\r\n    [Shape].lineTo(left, top)\r\n        - move the end of the line to specific position\r\n\r\n    [Shape].scaleTo()\r\n        - scale is disabled in line    \r\n\r\n    [Shape].ptrStart\r\n        - start pointer of the line\r\n\r\n    [Shape].ptrEnd\r\n        - end pointer of the line\r\n\r\n    [Shape].options\r\n        - options of the line\r\n\r\n************************************************/\r\n\r\n(function () {\r\n    \"use strict\";\r\n    // HTML library\r\n    var _HTML = {};\r\n    _HTML[\"Base\"] = '';\r\n    _HTML[\"Line\"] = '<div class=\"drawing-wrap\"><div class=\"drawing-line\"><div class=\"drawing-line-start\"></div><div class=\"drawing-line-body\"></div><div class=\"drawing-line-end\"></div></div></div>';\r\n    // Shape library\r\n    var _Shape = {};\r\n    _Shape[\"Base\"] = function () {\r\n        this.ele;\r\n        this.inner;\r\n        this.deg;\r\n\r\n        this.move = function (left, top) {\r\n            if (this.ele == null) return;\r\n            var cssList = {\r\n                \"left\": (parseInt(this.inner.css(\"left\")) + (left ? left : 0)) + \"px\",\r\n                \"top\": (parseInt(this.inner.css(\"top\")) + (top ? top : 0)) + \"px\"\r\n            };\r\n            this.ele.css(cssList);\r\n        };\r\n\r\n        this.moveTo = function (left, top) {\r\n            if (this.ele == null) return;\r\n            var cssList = {};\r\n            if (left !== null && left !== undefined) cssList[\"left\"] = left + \"px\";\r\n            if (top !== null && top !== undefined) cssList[\"top\"] = top + \"px\";\r\n            this.ele.css(cssList);\r\n        };\r\n\r\n        this.rotate = function (deg) {\r\n            if (this.ele == null) return;\r\n            var r = this.inner.rotation();\r\n            this.inner.transform2D({\r\n                rotate: r + deg\r\n            });\r\n        };\r\n\r\n        this.rotateTo = function (deg) {\r\n            if (this.ele == null) return;\r\n            this.inner.transform2D({\r\n                rotate: deg\r\n            });\r\n        };\r\n\r\n        this.scaleTo = function (ratio) {\r\n            if (this.ele == null) return;\r\n            this.inner.transform2D({\r\n                scaleX: ratio,\r\n                scaleY: ratio\r\n            });\r\n        };\r\n\r\n        // Element control\r\n        this.show = function () {\r\n            if (this.ele == null) return;\r\n            this.ele.show();\r\n        };\r\n\r\n        this.hide = function () {\r\n            if (this.ele == null) return;\r\n            this.ele.hide();\r\n        };\r\n\r\n        this.destroy = function () {\r\n            if (this.ele == null) return;\r\n            this.ele.remove();\r\n        };\r\n\r\n        this.setOpts = function (opts) {\r\n        };\r\n    };\r\n\r\n    _Shape[\"Line\"] = function (opts_in) {\r\n        var that = this;\r\n        var _base = this;\r\n        var _buffer_h = 0;      // buffer of line length, in order to fix old ie issue\r\n        var _t = 0;             // top difference\r\n        var _l = 0;             // left difference\r\n\r\n        var _html = {\r\n            \"body\": null,\r\n            \"start\": null,\r\n            \"end\": null\r\n        };\r\n        var endPoint = {\r\n            \"left\": 0,\r\n            \"top\": 0\r\n        };\r\n        \r\n        this.ptrStart = null;\r\n        this.ptrEnd = null;\r\n        this.options = {\r\n            \"container\": $(\"body\"),\r\n            \"width\": 1,\r\n            \"z-index\": 1,\r\n            background: {\r\n                color: \"#000\",\r\n                image: null\r\n            },\r\n            pointer: {\r\n                start: {\r\n                    image: null,\r\n                    position: null,\r\n                    radius: 0\r\n                },\r\n                end: {\r\n                    image: null,\r\n                    position: null,\r\n                    radius: 0\r\n                }\r\n            }\r\n        };\r\n\r\n        this.lineTo = function (left, top) {\r\n            if (left !== null && left !== undefined) endPoint[\"left\"] = left;\r\n            if (top !== null && top !== undefined) endPoint[\"top\"] = top;\r\n\r\n            // set line \r\n            var startPoint = {\r\n                left:  parseInt(that.ele.css(\"left\")),\r\n                top:  parseInt(that.ele.css(\"top\"))\r\n            };\r\n\r\n            _l = endPoint.left - startPoint.left;\r\n            _t = endPoint.top - startPoint.top;\r\n            var deg = -Math.atan2(_l, _t) * 180 / Math.PI;\r\n            _buffer_h = Math.sqrt(_l * _l + _t * _t) + that.options.pointer.start.radius + that.options.pointer.end.radius;\r\n            that.ele.css(\"overflow\",\"hidden\");\r\n            that.inner.height(_buffer_h);\r\n            _html[\"body\"].height(_buffer_h - that.options.pointer.start.radius * 2 - that.options.pointer.end.radius );\r\n\r\n            this.rotateTo(deg);\r\n            that.ele.css(\"overflow\", \"visible\");\r\n        };\r\n\r\n        this.rotate = function (deg) {\r\n            if (this.ele == null) return;\r\n            var r = that.inner.rotation();\r\n            //var offset = _buffer_h / 2 - that.options.pointer.start.radius;\r\n            that.inner.transform2D({\r\n                rotate: r + deg,\r\n                translateX: -(_buffer_h / 2 - that.options.pointer.start.radius) * Math.sin(deg / 180 * Math.PI),\r\n                translateY: (_buffer_h / 2 - that.options.pointer.start.radius) * Math.cos(deg / 180 * Math.PI) - _buffer_h / 2\r\n            });\r\n            //that.inner.css(\"top\", -offset - that.options.pointer.start.radius + \"px\");\r\n        };\r\n\r\n        this.rotateTo = function (deg) {\r\n            if (this.ele == null) return;\r\n            //var offset = _buffer_h / 2 - that.options.pointer.start.radius;\r\n            that.inner.transform2D({\r\n                rotate: deg,\r\n                translateX: -(_buffer_h / 2 - that.options.pointer.start.radius) * Math.sin(deg / 180 * Math.PI),\r\n                translateY: (_buffer_h / 2 - that.options.pointer.start.radius) * Math.cos(deg / 180 * Math.PI) - _buffer_h / 2\r\n            });\r\n            //that.inner.css(\"top\", -offset - that.options.pointer.start.radius + \"px\");\r\n        };\r\n\r\n        this.scaleTo = function (rate) {\r\n            return;\r\n        };\r\n\r\n        this.setOpts = function (opts) {\r\n            _setOpts(opts);\r\n            _render();\r\n        };\r\n\r\n        var _setOpts = function (opts) {\r\n            if (opts == null) return;\r\n            if (opts[\"container\"]) that.options[\"container\"] = opts[\"container\"];\r\n            if (opts[\"width\"]) that.options[\"width\"] = opts[\"width\"];\r\n            if (opts[\"z-index\"]) that.options[\"z-index\"] = opts[\"z-index\"];\r\n\r\n            if (opts.background) {\r\n                for (var i in opts.background)\r\n                    that.options.background[i] = opts.background[i];\r\n            }\r\n            if (opts.pointer) {\r\n                for (var i in opts.pointer)\r\n                    that.options.pointer[i] = opts.pointer[i];\r\n            }\r\n        };\r\n\r\n        var _render = function () {\r\n            var opts = that.options;\r\n\r\n            // overall css\r\n            var max_w = opts[\"width\"];\r\n            if (max_w < opts.pointer.start.radius * 2) max_w = opts.pointer.start.radius * 2;\r\n            if (max_w < opts.pointer.end.radius * 2) max_w = opts.pointer.end.radius * 2;\r\n\r\n            that.ele.css(\"z-index\", opts[\"z-index\"]);\r\n\r\n            var cssListEle = {};\r\n            cssListEle[\"width\"] = max_w + \"px\";\r\n            cssListEle[\"top\"] = \"0px\";\r\n            cssListEle[\"left\"] = -max_w / 2 + \"px\";\r\n            that.inner.css(cssListEle);\r\n\r\n            // body css\r\n            var cssListBody = {};\r\n            cssListBody[\"width\"] = opts[\"width\"] + \"px\";\r\n            cssListBody[\"margin-top\"] = \"0px\";\r\n            cssListBody[\"margin-left\"] = (max_w - opts[\"width\"])/2 + \"px\";\r\n            cssListBody[\"background-color\"] = opts.background.color;\r\n            cssListBody[\"background-image\"] = (opts.background.image == null) ? null : (\"url('\" + opts.background.image + \"')\");\r\n            _html[\"body\"].css(cssListBody);\r\n\r\n            // start pointer css\r\n            var cssListStart = {};\r\n            cssListStart[\"background-image\"] = (opts.pointer.start.image == null) ? null : (\"url('\" + opts.pointer.start.image + \"')\");\r\n            cssListStart[\"background-position\"] = (opts.pointer.start.position == null) ? null : opts.pointer.start.position;\r\n            cssListStart[\"height\"] = cssListStart[\"width\"] = opts.pointer.start.radius * 2 + \"px\";\r\n            cssListStart[\"margin-left\"] = (max_w / 2 - opts.pointer.start.radius) + \"px\";\r\n            _html[\"start\"].css(cssListStart);\r\n\r\n            // end pointer css\r\n            var cssListEnd = {};\r\n            cssListEnd[\"background-image\"] = (opts.pointer.end.image == null) ? null : (\"url('\" + opts.pointer.end.image + \"')\");\r\n            cssListEnd[\"background-position\"] = (opts.pointer.end.position == null) ? null : opts.pointer.end.position;\r\n            cssListEnd[\"height\"] = cssListEnd[\"width\"] = opts.pointer.end.radius * 2 + \"px\";\r\n            cssListEnd[\"margin-left\"] = (max_w / 2 - opts.pointer.end.radius) + \"px\";\r\n            cssListEnd[\"margin-top\"] = - opts.pointer.end.radius + \"px\";\r\n            _html[\"end\"].css(cssListEnd);\r\n        };\r\n\r\n        var _buildEle = function () {\r\n            that.ele = $(_HTML.Line);\r\n            that.ele.appendTo(that.options.container);\r\n            that.inner = that.ele.children(\".drawing-line\");\r\n            _html[\"body\"] = that.inner.children(\".drawing-line-body\");\r\n            _html[\"start\"] = that.inner.children(\".drawing-line-start\");\r\n            _html[\"end\"] = that.inner.children(\".drawing-line-end\");\r\n            that.ptrStart = _html[\"start\"];\r\n            that.ptrEnd = _html[\"end\"];\r\n\r\n            that.ele.css({\r\n                \"position\": \"absolute\",\r\n                \"margin\": \"0px\",\r\n                \"padding\": \"0px\",\r\n                \"border\": \"0px\",\r\n                \"top\": \"0px\",\r\n                \"left\": \"0px\",\r\n                \"width\": \"1px\",\r\n                \"height\": \"1px\"\r\n            });\r\n            that.inner.css({\r\n                \"position\": \"absolute\",\r\n                \"margin\": \"0px\",\r\n                \"padding\": \"0px\",\r\n                \"border\": \"0px\",\r\n                \"top\": \"0px\",\r\n                \"left\": \"0px\"\r\n            });\r\n            _html[\"body\"].css({\r\n                \"z-index\": \"1\",\r\n                \"width\": \"0px\",\r\n                \"height\": \"100%\",\r\n                \"margin\": \"0px\",\r\n                \"background-position\":\"center center\"\r\n            });\r\n            _html[\"start\"].css({\r\n                \"z-index\": \"3\",\r\n                \"width\": \"0px\",\r\n                \"height\": \"0px\",\r\n                \"margin\": \"0px\"\r\n            });\r\n            _html[\"end\"].css({\r\n                \"z-index\": \"2\",\r\n                \"width\": \"0px\",\r\n                \"height\": \"0px\",\r\n                \"margin\": \"0px\"\r\n            });\r\n\r\n            _render();\r\n        };\r\n\r\n        var _init = function (opts) {\r\n            _base = that.constructor.prototype = new _Shape.Base();\r\n            _setOpts(opts);\r\n            _buildEle();\r\n            _render();\r\n        }(opts_in);\r\n    };\r\n\r\n    // Drawing init\r\n    var _initDrawing = function () {\r\n        this.create = function (shapeType, opts) {\r\n            if (!(shapeType in _Shape) || shapeType == \"Base\") return null;\r\n            _Shape[shapeType].prototype = new _Shape.Base();\r\n            _Shape[shapeType].base = _Shape[shapeType].prototype;\r\n            return new _Shape[shapeType](opts);\r\n        };\r\n        var _init = function () {\r\n        }();\r\n    };\r\n\r\n    window.$$ = window.$$ || {};\r\n    window.$$.drawing = new _initDrawing();\r\n})();"],"sourceRoot":"/source/"}